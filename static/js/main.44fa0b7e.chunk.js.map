{"version":3,"sources":["FirebaseDB.js","components/TweetBox.js","components/TwitterFeed.js","pages/HomeScreen.js","pages/SignUp.js","pages/LogIn.js","components/Navbar/NavbarElements.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","getFirestore","auth","getAuth","_callee","userID","name","email","tweetID","_regeneratorRuntime","wrap","_context","prev","next","setDoc","doc","username","tweets","followers","following","stop","isLoggedIn","Promise","resolve","reject","unsubscribe","onAuthStateChanged","user","createNewUser","password","createUserWithEmailAndPassword","then","userCredential","_x","_x2","_x3","_x4","_writeUserData","apply","this","arguments","writeUserData","uid","alert","catch","error","errorCode","code","errorMessage","message","console","warn","logOutUser","signOut","window","location","reload","addTweetToUser","_callee2","docID","_context2","updateDoc","arrayUnion","t0","log","_callee3","tweet","docRef","_context3","addDoc","t1","collection","t2","serverTimestamp","t3","t4","getUsername","t5","sent","t6","time","id","getTweets","_getTweets","_callee4","tweetsCollection","querySnapshot","usersTweets","_context4","query","orderBy","getDocs","forEach","data","abrupt","Object","entries","_x9","_getUsername","_callee5","docSnap","_context5","getDoc","exists","TweetBox","_useState","useState","_useState2","slicedToArray","tweetTextBox","setTweetTextBox","_useState3","_useState4","isUserLoggedIn","setisUserLoggedIn","useEffect","_ref","asyncToGenerator","TweetBox_regeneratorRuntime","mark","getAuthStatus","react_default","a","createElement","className","multiline","type","placeholder","onChange","val","target","value","onClick","e","preventDefault","_x7","_x8","_uploadTweet","uploadTweet","currentUser","getUid","setTimeout","TwitterFeed","props","Fragment","HomeScreen","renderFeed","setRenderFeed","HomeScreen_regeneratorRuntime","feed","map","element","components_TwitterFeed","key","getData","components_TweetBox","SignUp","setemail","setpassword","_useState5","_useState6","setusername","Form","Group","controlId","Label","Control","Text","Check","label","Button","variant","signInWithEmailAndPassword","logInUser","Nav","styled","nav","_templateObject","taggedTemplateLiteral","NavLink","Link","_templateObject2","Bars","FaBars","_templateObject3","NavMenu","div","_templateObject4","NavBtn","_templateObject5","NavBtnLink","_templateObject6","Navbar","Navbar_regeneratorRuntime","to","activeStyle","App","dist","components_Navbar","react_router_dist","exact","path","pages_HomeScreen","LogIn","pages_SignUp","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.44fa0b7e.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  getAuth,\n  onAuthStateChanged,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n  serverTimestamp,\n  query,\n  getDoc,\n  setDoc,\n  doc,\n  updateDoc,\n  arrayUnion,\n  getDocs,\n  orderBy,\n} from \"firebase/firestore\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDNeq6JzHqtWUZbU8o9iqql4RaIc1dlHuc\",\n  authDomain: \"twitter-clone-8869e.firebaseapp.com\",\n  databaseURL: \"https://twitter-clone-8869e-default-rtdb.firebaseio.com\",\n  projectId: \"twitter-clone-8869e\",\n  storageBucket: \"twitter-clone-8869e.appspot.com\",\n  messagingSenderId: \"654546115962\",\n  appId: \"1:654546115962:web:7b6ab733068000c2e80ac3\",\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nconst firestore = getFirestore(app);\nexport const auth = getAuth(app);\n\n// Write user data to Realtime Database\nexport async function writeUserData(userID, name, email, tweetID) {\n  await setDoc(doc(firestore, \"users\", userID), {\n    username: name,\n    email: email,\n    tweets: [],\n    followers: [],\n    following: [],\n  });\n}\n\n// Check if user logged in\n\nexport function isLoggedIn() {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n      unsubscribe();\n    });\n  });\n}\n\n// Get currently logged in user UID\nexport function getUid() {\n  if (isLoggedIn()) {\n    // User is signed in, see docs for a list of available properties\n    // https://firebase.google.com/docs/reference/js/firebase.User\n    const currUser = auth.currentUser;\n    const uid = currUser.uid;\n    console.log(uid);\n    return uid;\n    // ...\n  } else {\n    alert(\"Please Log In!\");\n    console.log(\"not logged in\");\n  }\n}\n\n// Create new user\nexport function createNewUser(auth, email, password, username) {\n  createUserWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      writeUserData(user.uid, username, email, []);\n      alert(\"Created new user and signed in\");\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n\n      console.warn(errorCode);\n      console.warn(errorMessage);\n\n      // ..\n    });\n}\n\n// Log user in\nexport function logInUser(email, password) {\n  signInWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n      // Signed in\n      //const user = userCredential.user;\n      // ...\n      window.location.reload(false);\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.error(\"error code: \" + errorCode);\n      console.error(\"error message: \" + errorMessage);\n    });\n    alert(\"You are logged in!\");\n}\n\n// log out current user\nexport function logOutUser(){\n  signOut(auth).then(() => {\n    // Sign-out successful.\n    alert(\"Sign out successful!\")\n    window.location.reload(false);\n  }).catch((error) => {\n    // An error happened.\n  });\n}\n\n// add tweet to user profile\nasync function addTweetToUser(docID, userID) {\n  const user = doc(firestore, \"users\", userID);\n  try {\n    await updateDoc(user, {\n      tweets: arrayUnion(docID),\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Upload tweet to firestore database\nexport async function uploadTweet(tweet, uid) {\n  const docRef = await addDoc(collection(firestore, \"tweets\"), {\n    time: serverTimestamp(),\n    tweet: tweet,\n    userID: uid,\n    username: await getUsername(uid),\n  });\n  console.log(\"Document written with ID: \", docRef.id);\n  addTweetToUser(docRef.id, uid);\n}\n\n// gets all tweets from firestore\nexport async function getTweets() {\n  try {\n    const tweetsCollection = query(\n      collection(firestore, \"tweets\"),\n      orderBy(\"time\", \"desc\")\n    );\n    const querySnapshot = await getDocs(tweetsCollection);\n    var usersTweets = {};\n    querySnapshot.forEach((doc) => {\n      usersTweets[doc.id] = doc.data();\n    });\n    return Object.entries(usersTweets);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getUsername(uid) {\n  const docRef = doc(firestore, \"users\", uid);\n  const docSnap = await getDoc(docRef);\n  if (docSnap.exists()) {\n    return docSnap.data().username;\n  } else {\n    // doc.data() will be undefined in this case\n    console.log(\"No such document!\");\n  }\n}\n\nexport default isLoggedIn;\n","import React, { useState, useEffect } from \"react\";\nimport \"./TweetBox.css\";\nimport { uploadTweet, getUid, isLoggedIn } from \"../FirebaseDB\";\n\nfunction TweetBox() {\n  const [tweetTextBox, setTweetTextBox] = useState();\n  const [isUserLoggedIn, setisUserLoggedIn] = useState(false);\n\n  function tweetTextBoxHandler(val) {\n    setTweetTextBox(val.target.value);\n  }\n\n  useEffect(() => {\n    const getAuthStatus = async () => {\n      setisUserLoggedIn(await isLoggedIn());\n    };\n\n    getAuthStatus();\n  }, []);\n\n  const tweetHandler = (e) => {\n    e.preventDefault();\n    console.log(\"entered handler\");\n    if (isUserLoggedIn) {\n      uploadTweet(tweetTextBox, getUid());\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 500);\n    }\n    else{\n      alert(\"Please log in!\");\n    }\n  };\n\n  return (\n    <div>\n      <form>\n        <div className=\"tweetBox\">\n          <textarea\n            multiline\n            className=\"textBox\"\n            type=\"text\"\n            placeholder=\"What's your Tweet?\"\n            onChange={tweetTextBoxHandler}\n          />\n          <button className=\"tweetBtn\" onClick={tweetHandler}>\n            Tweet\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default TweetBox;\n","import React, {  } from \"react\";\nimport \"./TwitterFeed.css\";\n\nfunction TwitterFeed(props) {\n  /* let username = props.username;\n  let tweet = props.tweet; */\n  return (\n    <>\n      <div className=\"tweetFeed\">\n        <div className=\"header\">\n          <label> {props.username} </label>\n          <button className=\"followBtn\"> follow </button>\n        </div>\n        <p className=\"tweet\"> {props.tweet} </p>\n      </div>\n    </>\n  );\n}\n\nexport default TwitterFeed;\n","import React, { useState, useEffect } from \"react\";\nimport TweetBox from \"../components/TweetBox.js\";\nimport TwitterFeed from \"../components/TwitterFeed.js\";\nimport { getTweets } from \"../FirebaseDB\";\n\nfunction HomeScreen() {\n  const [renderFeed, setRenderFeed] = useState();\n  \n  useEffect(() => {\n    const getData = async () => {\n      const data = await getTweets();\n      console.log(data);\n      let feed = data.map((element) => (\n        <TwitterFeed key={element[0]} username={\"@\" + element[1].username} tweet={element[1].tweet} />\n      ));\n      setRenderFeed(feed);\n    };\n    getData();\n  }, []);\n\n  return (\n    <>\n      <TweetBox />\n      {renderFeed}\n    </>\n  );\n}\n\nexport default HomeScreen;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { auth, createNewUser } from \"../FirebaseDB.js\";\n\nfunction SignUp() {\n  const [email, setemail] = useState();\n  const [password, setpassword] = useState();\n  const [username, setusername] = useState();\n\n  function emailHandler(val) {\n    setemail(val.target.value);\n  }\n  function passwordHandler(val) {\n    setpassword(val.target.value);\n  }\n  function usernameHandler(val) {\n    setusername(val.target.value);\n  }\n\n  const createUserHandler = (e) => {\n    e.preventDefault();\n    createNewUser(auth, email, password, username);\n    console.log(\"user created\");\n    setemail(\"\");\n    setpassword(\"\");\n    setusername(\"\");\n  };\n\n  return (\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={emailHandler}\n        />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter Username\"\n          onChange={usernameHandler}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={passwordHandler}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" onClick={createUserHandler}>\n        Submit\n      </Button>\n    </Form>\n  );\n}\n\nexport default SignUp;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { logInUser } from \"../FirebaseDB\";\nimport {  } from \"firebase/auth\";\n\nfunction SignUp() {\n  const [email, setemail] = useState();\n  const [password, setpassword] = useState();\n\n  function emailHandler(val) {\n    setemail(val.target.value);\n  }\n  function passwordHandler(val) {\n    setpassword(val.target.value);\n  }\n\n  const logInUserHandler = (e) => {\n    e.preventDefault();\n    console.log(\"button worked\");\n    logInUser(email, password);\n    console.log(\"user logged in\");\n    setemail(\"\");\n    setpassword(\"\");\n  };\n\n  return (\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={emailHandler}\n        />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={passwordHandler}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" onClick={logInUserHandler}>\n        Submit\n      </Button>\n    </Form>\n  );\n}\n\nexport default SignUp;\n","import { FaBars } from \"react-icons/fa\";\nimport { NavLink as Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n  background: #1da1f2;\n  height: 85px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.2rem calc((100vw - 1000px) / 2);\n  z-index: 12;\n  /* Third Nav */\n  /* justify-content: flex-start; */\n`;\n\nexport const NavLink = styled(Link)`\n  color: #808080;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  &.active {\n    color: #000000;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #808080;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n  /* Second Nav */\n  /* margin-right: 24px; */\n  /* Third Nav */\n  /* width: 100vw;\nwhite-space: nowrap; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  /* Third Nav */\n  /* justify-content: flex-end;\nwidth: 100vw; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #808080;\n  padding: 10px 22px;\n  color: #000000;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  /* Second Nav */\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #808080;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\nimport { isLoggedIn, logOutUser } from \"../../FirebaseDB\";\n\nconst Navbar = () => {\n  const [isUserLoggedIn, setisUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const getAuthStatus = async () => {\n      setisUserLoggedIn(await isLoggedIn());\n    };\n\n    getAuthStatus();\n  }, []);\n\n  console.log(isUserLoggedIn);\n\n  return (\n    <>\n      <Nav>\n        <Bars />\n        <NavMenu>\n          <NavLink to=\"/\" activeStyle>\n            Twitter Clone\n          </NavLink>\n          {!isUserLoggedIn && (\n            <NavLink to=\"/SignUp\" activeStyle>\n              Sign Up\n            </NavLink>\n          )}\n          {/* Second Nav */}\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\n        </NavMenu>\n        <NavBtn>\n          {!isUserLoggedIn && <NavBtnLink to=\"/LogIn\">Sign In</NavBtnLink>}\n          {isUserLoggedIn && (\n            <NavBtnLink onClick={logOutUser}>Log Out</NavBtnLink>\n          )}\n        </NavBtn>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport HomeScreen from \"./pages/HomeScreen.js\";\nimport SignUp from \"./pages/SignUp\";\nimport LogIn from \"./pages/LogIn.js\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/index\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<HomeScreen />} />\n          <Route exact path=\"/LogIn\" element={<LogIn />} />\n          <Route exact path=\"/SignUp\" element={<SignUp />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n      <App />\n  \n);\n// {/* <React.StrictMode> */}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}